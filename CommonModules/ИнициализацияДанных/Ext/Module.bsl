
#Область ПрограммныйИнтерфейс

Процедура ИнициализироватьДанные() Экспорт

	Если Константы.ДанныеИнициализированы.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		ИнициализироватьПервыйСезон();
		
		СгенерироватьНачальныеДанные(); 
		
		Трансферы.СимулироватьТрансфернуюАктивность();
		
		Константы.ДанныеИнициализированы.Установить(Истина);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		
		ОтменитьТранзакцию();
		
	КонецПопытки;
	
КонецПроцедуры 

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьПервыйСезон()

	СезонОбъект  = Справочники.Сезоны.Сезон2425.ПолучитьОбъект(); 
	СезонОбъект.ДатаНачала = СтартоваяИгроваяДата();
	СезонОбъект.Записать();

КонецПроцедуры

Процедура СгенерироватьНачальныеДанные()

	НачальныеДанные = ПолучитьОбщийМакет("НачальныеДанные"); 
	JSON = НачальныеДанные.ПолучитьТекст();
	
	СписокФутбольныхЛиг = РаботаСJSON.ЗначениеИзJSON(JSON);
		
	Для Каждого ДанныеЛиги Из СписокФутбольныхЛиг Цикл
		
		Лига = СоздатьЛигу(ДанныеЛиги);
		
		ДокументОткрытияСезона = Документы.ОткрытиеСезона.СоздатьДокумент();
		ДокументОткрытияСезона.Дата = СтартоваяИгроваяДата();
		ДокументОткрытияСезона.Лига = Лига;
		ДокументОткрытияСезона.Сезон = Справочники.Сезоны.Сезон2425;

		Для Каждого ДанныеФутбольногоКлуба Из ДанныеЛиги.ФутбольныеКлубы Цикл
			
			ФутбольныйКлуб = СоздатьФутбольныйКлуб(ДанныеФутбольногоКлуба);		
			
			СтрокаКомандыЛиги = ДокументОткрытияСезона.СоставЛиги.Добавить();
			СтрокаКомандыЛиги.ФутбольныйКлуб = ФутбольныйКлуб;  
			
			СтрокаБюджета = ДокументОткрытияСезона.БюджетыКлубов.Добавить();
			СтрокаБюджета.ФутбольныйКлуб = ФутбольныйКлуб;
			СтрокаБюджета.ОбщийБюджет = ДанныеФутбольногоКлуба.ОбщийБюджет; 
			СтрокаБюджета.ТрансферныйБюджет = ДанныеФутбольногоКлуба.ТрансферныйБюджет;
			
			НомерФотографии = 1;
			Для Каждого ДанныеФутболиста Из ДанныеФутбольногоКлуба.Футболисты Цикл
				
				Если НомерФотографии > 30 Тогда 
					НомерФотографии = 1;
				КонецЕсли;
				
				СоздатьФутболиста(ДанныеФутболиста, ФутбольныйКлуб, НомерФотографии);
				НомерФотографии = НомерФотографии + 1;
				
			КонецЦикла;
						
		КонецЦикла;
		
		ДокументОткрытияСезона.РассчитатьТрансфернуюСтоимостьФутболистов();
		
		ДокументОткрытияСезона.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьЛигу(ДанныеЛиги)

	ЛигаОбъект = Справочники.Лиги.СоздатьЭлемент();
	ЛигаОбъект.Наименование = ДанныеЛиги.Наименование; 
	ЛигаОбъект.Владелец = СтранаПоИмени(ДанныеЛиги.Страна);
	
	Для Каждого МесяцСтрокой Из ДанныеЛиги.МесяцаМатчей Цикл
		СтрокаМесяца = ЛигаОбъект.МесяцаМатчей.Добавить();	
		СтрокаМесяца.Месяц = Дата(МесяцСтрокой);
	КонецЦикла;
	
	Для Каждого ТрансферноеОкно Из ДанныеЛиги.ТрансферныеОкна Цикл
		СтрокаТрансферногоОкна = ЛигаОбъект.ТрансферныеОкна.Добавить();	
		СтрокаТрансферногоОкна.ДатаНачала = Дата(ТрансферноеОкно.ДатаНачала);
		СтрокаТрансферногоОкна.ДатаОкончания = Дата(ТрансферноеОкно.ДатаОкончания);
	КонецЦикла;
	
	ЛигаОбъект.Записать();
	
	Возврат ЛигаОбъект.Ссылка;

КонецФункции

Функция СоздатьФутбольныйКлуб(ДанныеФутбольногоКлуба)

	ФутбольныйКлубОбъект = Справочники.ФутбольныеКлубы.СоздатьЭлемент();
	ФутбольныйКлубОбъект.Наименование = ДанныеФутбольногоКлуба.Наименование;   
	ФутбольныйКлубОбъект.Схема = ВернутьЗначениеПеречисленияПоСинониму("ИгровыеСхемы", ДанныеФутбольногоКлуба.Схема);
	ФутбольныйКлубОбъект.Тактика = ВернутьЗначениеПеречисленияПоСинониму("ИгровыеТактики", ДанныеФутбольногоКлуба.Тактика);
	ФутбольныйКлубОбъект.Страна = СтранаПоИмени(ДанныеФутбольногоКлуба.Страна);
	
	ПозицииПоСхеме = ИгровыеМеханики.ПозицииПоСхеме(ФутбольныйКлубОбъект.Схема);
	
	Для Индекс = 0 По 10 Цикл	
		
		СтрокаСостава = ФутбольныйКлубОбъект.СтартовыйСостав.Добавить();
		
		GUIDИгрокаСтартовогоСостава = ДанныеФутбольногоКлуба.СтартовыйСостав[Индекс];
		СтрокаСостава.Футболист = Справочники.Футболисты.ПолучитьСсылку(Новый УникальныйИдентификатор(GUIDИгрокаСтартовогоСостава));   
		
		СтрокаСостава.Позиция = ПозицииПоСхеме[Индекс];
		
	КонецЦикла;
	
	ФутбольныйКлубОбъект.Записать();
	
	Возврат ФутбольныйКлубОбъект.Ссылка;

КонецФункции

Функция СоздатьФутболиста(ДанныеФутболиста, ФутбольныйКлуб, НомерФотографии)

	ФутболистОбъект = Справочники.Футболисты.СоздатьЭлемент();     
	ФутболистОбъект.УстановитьСсылкуНового(Справочники.Футболисты.ПолучитьСсылку(Новый УникальныйИдентификатор(ДанныеФутболиста.GUID)));
	ЗаполнитьЗначенияСвойств(ФутболистОбъект, ДанныеФутболиста);   
	ФутболистОбъект.ФутбольныйКлуб = ФутбольныйКлуб;
	ФутболистОбъект.Позиция = ВернутьЗначениеПеречисленияПоСинониму("ИгровыеПозиции", ДанныеФутболиста.Позиция); 
	ФутболистОбъект.Гражданство = Справочники.СтраныМира.Россия;
	ФутболистОбъект.Фотография = Новый ХранилищеЗначения(БиблиотекаКартинок["ФотоФутболиста" + НомерФотографии]);
	
	ФутболистОбъект.Записать();
	
	Возврат ФутболистОбъект.Ссылка;

КонецФункции 

Функция СтранаПоИмени(НаименованиеСтраны)

	Страна = Справочники.СтраныМира.НайтиПоНаименованию(НаименованиеСтраны);
	Если ЗначениеЗаполнено(Страна) Тогда
		Возврат Страна;
	КонецЕсли;
	
	СтранаОбъект = Справочники.СтраныМира.СоздатьЭлемент();
	СтранаОбъект.Наименование = НаименованиеСтраны; 
	СтранаОбъект.Записать();
	
	Возврат СтранаОбъект.Ссылка;

КонецФункции 

Функция ВернутьЗначениеПеречисленияПоСинониму(ИмяПеречисления, СинонимЗначения)
	
	ЭлементПеречисления = Неопределено;
	Для каждого ТекЭлемент Из Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления Цикл
		Если ТекЭлемент.Синоним = СинонимЗначения Тогда
			ЭлементПеречисления = Перечисления[ИмяПеречисления][ТекЭлемент.Имя];
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат ЭлементПеречисления;
	
КонецФункции

Функция СтартоваяИгроваяДата()

	Возврат '20240101';

КонецФункции 

#КонецОбласти