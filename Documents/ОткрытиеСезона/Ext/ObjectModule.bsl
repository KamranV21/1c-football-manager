		 
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Процедура РассчитатьТрансфернуюСтоимостьФутболистов() Экспорт
	
	ТрансфернаяСтоимость.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Футболисты.Ссылка КАК Футболист,
	                      |	Футболисты.Рейтинг КАК Рейтинг,
	                      |	Футболисты.Возраст КАК Возраст
	                      |ИЗ
	                      |	Справочник.Футболисты КАК Футболисты
	                      |ГДЕ
	                      |	НЕ Футболисты.ЗавершилКарьеру");	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТаблицы = ТрансфернаяСтоимость.Добавить();
		СтрокаТаблицы.Футболист = Выборка.Футболист;
		СтрокаТаблицы.ТрансфернаяСтоимость = Трансферы.РассчитатьТрансфернуюСтоимостьФутболиста(Выборка);

	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти  

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнициализацияПараметровЗапроса(Запрос);	  
	
	ТекстыЗапросов = Новый Структура;
	ТекстЗапросаТрансфернаяСтоимость(ТекстыЗапросов);
	ТекстЗапросаСоставЛиги(ТекстыЗапросов);
	ТекстЗапросаБюджетыФутбольныхКлубов(ТекстыЗапросов);
	ТекстЗапросаРасстановкаСилНаНачалоСезона(ТекстыЗапросов);
	
	ВтРейтингиКлубов(Запрос);
	
	РезультатыЗапроса = РезультатыЗапроса(Запрос, ТекстыЗапросов);
	
	СформироватьДвиженияПоРегиструТрансфернаяСтоимость(РезультатыЗапроса, Движения);
	СформироватьДвиженияПоРегиструСоставЛиги(РезультатыЗапроса, Движения);
	СформироватьДвиженияПоРегиструБюджетыФутбольныхКлубов(РезультатыЗапроса, Движения);
	СформироватьДвиженияПоРегиструРасстановкаСилНаНачалоСезона(РезультатыЗапроса, Движения);

	СформироватьРасписание();   
	
КонецПроцедуры  

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти	

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализацияПараметровЗапроса(Запрос)

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

КонецПроцедуры

Процедура ТекстЗапросаТрансфернаяСтоимость(ТекстыЗапросов)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	тТрансфернаяСтоимость.Ссылка.Сезон.ДатаНачала КАК Период,
	               |	тТрансфернаяСтоимость.Ссылка КАК Регистратор,
	               |	тТрансфернаяСтоимость.Футболист КАК Футболист,
	               |	тТрансфернаяСтоимость.ТрансфернаяСтоимость КАК ТрансфернаяСтоимость
	               |ИЗ
	               |	Документ.ОткрытиеСезона.ТрансфернаяСтоимость КАК тТрансфернаяСтоимость
	               |ГДЕ
	               |	тТрансфернаяСтоимость.Ссылка = &Ссылка";
	ТекстыЗапросов.Вставить("ТрансфернаяСтоимость", ТекстЗапроса);

КонецПроцедуры 

Процедура ТекстЗапросаСоставЛиги(ТекстыЗапросов)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	тСоставЛиги.Ссылка.Сезон.ДатаНачала КАК Период,
	               |	тСоставЛиги.Ссылка КАК Регистратор,
	               |	тСоставЛиги.Ссылка.Сезон КАК Сезон,
	               |	тСоставЛиги.ФутбольныйКлуб КАК ФутбольныйКлуб,
	               |	тСоставЛиги.Ссылка.Лига КАК Лига
	               |ИЗ
	               |	Документ.ОткрытиеСезона.СоставЛиги КАК тСоставЛиги
	               |ГДЕ
	               |	тСоставЛиги.Ссылка = &Ссылка";
	ТекстыЗапросов.Вставить("СоставЛиги", ТекстЗапроса);

КонецПроцедуры 

Процедура ТекстЗапросаБюджетыФутбольныхКлубов(ТекстыЗапросов)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	тБюджетыКлубов.Ссылка.Сезон.ДатаНачала КАК Период,
	               |	тБюджетыКлубов.Ссылка КАК Регистратор,
	               |	тБюджетыКлубов.ФутбольныйКлуб КАК ФутбольныйКлуб,
	               |	тБюджетыКлубов.ОбщийБюджет КАК ОбщийБюджет,
	               |	тБюджетыКлубов.ТрансферныйБюджет КАК ТрансферныйБюджет
	               |ИЗ
	               |	Документ.ОткрытиеСезона.БюджетыКлубов КАК тБюджетыКлубов
	               |ГДЕ
	               |	тБюджетыКлубов.Ссылка = &Ссылка";
	ТекстыЗапросов.Вставить("БюджетыФутбольныхКлубов", ТекстЗапроса);

КонецПроцедуры 

Процедура ТекстЗапросаРасстановкаСилНаНачалоСезона(ТекстыЗапросов)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	тСоставЛиги.Ссылка.Сезон.ДатаНачала КАК Период,
	               |	тСоставЛиги.Ссылка КАК Регистратор,
	               |	тСоставЛиги.Ссылка.Лига КАК Лига,
	               |	тСоставЛиги.Ссылка.Сезон КАК Сезон,
	               |	тСоставЛиги.ФутбольныйКлуб КАК ФутбольныйКлуб,
	               |	ВтРейтингиКлубов.Рейтинг КАК Рейтинг
	               |ИЗ
	               |	Документ.ОткрытиеСезона.СоставЛиги КАК тСоставЛиги
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтРейтингиКлубов КАК ВтРейтингиКлубов
	               |		ПО тСоставЛиги.ФутбольныйКлуб = ВтРейтингиКлубов.ФутбольныйКлуб
	               |ГДЕ
	               |	тСоставЛиги.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Рейтинг УБЫВ";
	ТекстыЗапросов.Вставить("РасстановкаСилНаНачалоСезона", ТекстЗапроса);

КонецПроцедуры 

Процедура ВтРейтингиКлубов(Запрос)

	Запрос.Текст = "ВЫБРАТЬ
	               |	СправочникФутбольныеКлубы.Ссылка КАК ФутбольныйКлуб,
	               |	ОКР(СУММА(тСтартовыйСостав.Футболист.Рейтинг) / 11, 0) КАК Рейтинг
	               |ПОМЕСТИТЬ ВтРейтингиКлубов
	               |ИЗ
	               |	Справочник.ФутбольныеКлубы КАК СправочникФутбольныеКлубы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФутбольныеКлубы.СтартовыйСостав КАК тСтартовыйСостав
	               |		ПО (тСтартовыйСостав.Ссылка = СправочникФутбольныеКлубы.Ссылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СправочникФутбольныеКлубы.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |";
	Запрос.Выполнить();

КонецПроцедуры

Функция	РезультатыЗапроса(Запрос, ТекстыЗапросов)

	ТекстИтоговогоЗапроса = "";
	Для Каждого КлючИЗначение Из ТекстыЗапросов Цикл
		ТекстИтоговогоЗапроса = ТекстИтоговогоЗапроса + 
				?(ЗначениеЗаполнено(ТекстИтоговогоЗапроса), "; ", "") + 
				КлючИЗначение.Значение;	
	КонецЦикла; 
	
	Запрос.Текст = ТекстИтоговогоЗапроса;
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатыЗапроса = Новый Структура;
	
	Индекс = 0;
	Для Каждого КлючИЗначение Из ТекстыЗапросов Цикл
		РезультатыЗапроса.Вставить(КлючИЗначение.Ключ, МассивРезультатов[Индекс]);		
		Индекс = Индекс + 1;		
	КонецЦикла;
	
	Возврат РезультатыЗапроса;
	
КонецФункции

Процедура СформироватьДвиженияПоРегиструТрансфернаяСтоимость(РезультатыЗапроса, Движения)

	Выборка = РезультатыЗапроса.ТрансфернаяСтоимость.Выбрать();           
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Движения.ТрансфернаяСтоимость.Добавить(), Выборка);
	КонецЦикла;                                                       
	
	Движения.ТрансфернаяСтоимость.Записать();

КонецПроцедуры 

Процедура СформироватьДвиженияПоРегиструСоставЛиги(РезультатыЗапроса, Движения)

	Выборка = РезультатыЗапроса.СоставЛиги.Выбрать();           
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Движения.СоставЛиги.Добавить(), Выборка);
	КонецЦикла;                                                       
	
	Движения.СоставЛиги.Записать();

КонецПроцедуры

Процедура СформироватьДвиженияПоРегиструБюджетыФутбольныхКлубов(РезультатыЗапроса, Движения)

	Выборка = РезультатыЗапроса.БюджетыФутбольныхКлубов.Выбрать();           
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Движения.БюджетыФутбольныхКлубов.Добавить(), Выборка);
	КонецЦикла;                                                       
	
	Движения.БюджетыФутбольныхКлубов.Записать();

КонецПроцедуры

Процедура СформироватьДвиженияПоРегиструРасстановкаСилНаНачалоСезона(РезультатыЗапроса, Движения)

	Выборка = РезультатыЗапроса.РасстановкаСилНаНачалоСезона.Выбрать();           
	
	Позиция = 1;
	Пока Выборка.Следующий() Цикл 
		НоваяЗапись = Движения.РасстановкаСилНаНачалоСезона.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка); 
		НоваяЗапись.Позиция = Позиция;  
		Позиция = Позиция + 1;
	КонецЦикла;                                                       
	
	Движения.РасстановкаСилНаНачалоСезона.Записать();

КонецПроцедуры

Процедура СформироватьРасписание()
	
	ВсеКлубы = СоставЛиги.Выгрузить().ВыгрузитьКолонку("ФутбольныйКлуб");
	
	ПеремешатьЭлементыМассива(ВсеКлубы);
	
	Расписание = РегистрыСведений.РасписаниеЛиги.СоздатьНаборЗаписей().Выгрузить();
	КоличествоКлубов = ВсеКлубы.Количество();
	
	ТаблицаМатчей = Новый ТаблицаЗначений;
	ТаблицаМатчей.Колонки.Добавить("Хозяева", Новый ОписаниеТипов("СправочникСсылка.ФутбольныеКлубы"));
	ТаблицаМатчей.Колонки.Добавить("Гости", Новый ОписаниеТипов("СправочникСсылка.ФутбольныеКлубы"));
	
	Счетчик = 1;
	Для Каждого Хозяева Из ВсеКлубы Цикл
		
		Для Каждого Гости Из ВсеКлубы Цикл
			
			Если Хозяева = Гости Тогда
				Продолжить;
			КонецЕсли;
			
			Если Счетчик % 2 <> 0 Тогда
				ВыбранныеХозяева = Хозяева;
				ВыбранныеГости = Гости;
			Иначе   
				ВыбранныеГости = Хозяева;
				ВыбранныеХозяева = Гости;
			КонецЕсли;
			
			НайденныеСтроки = ТаблицаМатчей.НайтиСтроки(Новый Структура("Хозяева, Гости", ВыбранныеХозяева, ВыбранныеГости));
			Если НайденныеСтроки.Количество() = 0 Тогда
				Матч = ТаблицаМатчей.Добавить();
				Матч.Хозяева = ВыбранныеХозяева;
				Матч.Гости = ВыбранныеГости;
			Иначе
				Матч = ТаблицаМатчей.Добавить();
				Матч.Хозяева = ВыбранныеГости;
				Матч.Гости = ВыбранныеХозяева;
			КонецЕсли;
						
			Счетчик = Счетчик + 1;
					
		КонецЦикла;	
		
	КонецЦикла;
			
	ВсегоИгровыхДней = (ВсеКлубы.Количество() - 1) * 2;
	
	ХозяеваПоТурам = Новый Соответствие;
	ГостиПоТурам = Новый Соответствие;
	Для ИгровойДень = 0 По ВсегоИгровыхДней Цикл
		ХозяеваПоТурам.Вставить(ИгровойДень, Новый Массив);
		ГостиПоТурам.Вставить(ИгровойДень, Новый Массив);
	КонецЦикла;
	
	Для ИгровойДень = 1 По ВсегоИгровыхДней Цикл
		
		КомандыИгровогоДня = Новый Массив;
		
		Пока КомандыИгровогоДня.Количество() < 16 Цикл
						
			Для Каждого Матч Из ТаблицаМатчей Цикл 
				
				Хозяева = Матч.Хозяева;
				Гости = Матч.Гости;
												
				Если КомандыИгровогоДня.Найти(Хозяева) = Неопределено
					И КомандыИгровогоДня.Найти(Гости) = Неопределено Тогда
					
					ЭтоПервыйКруг = ИгровойДень <= ВсегоИгровыхДней / 2;
					Если ЭтоПервыйКруг Тогда
						НайденныеСтроки = Расписание.НайтиСтроки(Новый Структура("Гости, Хозяева", Хозяева, Гости));
						Если НайденныеСтроки.Количество() > 0 Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					НоваяСтрока = Расписание.Добавить();
					НоваяСтрока.Лига = Лига;
					НоваяСтрока.Сезон = Сезон;
					НоваяСтрока.Хозяева = Хозяева;
					НоваяСтрока.Гости = Гости;
					НоваяСтрока.ИгровойДень = ИгровойДень;  
					
					КомандыИгровогоДня.Добавить(Хозяева);
					КомандыИгровогоДня.Добавить(Гости); 
					
					ХозяеваПоТурам[ИгровойДень].Добавить(Хозяева);
					ГостиПоТурам[ИгровойДень].Добавить(Гости);
					
					ТаблицаМатчей.Удалить(Матч);
					
					Прервать;
					
				КонецЕсли;		
				
			КонецЦикла;
						
		КонецЦикла;
		
	КонецЦикла;
	
	ДатыИгровыхДней = Новый Соответствие; 
	ДатаНачалаСезона = Сезон.ДатаНачала;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЛигиМесяцаМатчей.Месяц КАК Месяц
	                      |ИЗ
	                      |	Справочник.Лиги.МесяцаМатчей КАК ЛигиМесяцаМатчей
	                      |ГДЕ
	                      |	ЛигиМесяцаМатчей.Ссылка = &Лига
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Месяц");
	Запрос.УстановитьПараметр("Лига", Лига);
	
	МесяцаМатчей = Запрос.Выполнить().Выгрузить();
	
	ИгровойДень = 1;
	Для Каждого СтрокаТаблицы Из МесяцаМатчей Цикл
		Месяц = СтрокаТаблицы.Месяц;
		ДатаМесяцаСезона = ?(Год(Месяц) > 1, ДобавитьМесяц(ДатаНачалаСезона, 12), ДатаНачалаСезона) + 86400 * (ДеньГода(Месяц)); 
		КонецМесяцаСезона = КонецМесяца(ДатаМесяцаСезона);
		Пока ДатаМесяцаСезона <= КонецМесяцаСезона Цикл
			Если ДеньНедели(ДатаМесяцаСезона) = 6 Тогда
				ДатыИгровыхДней.Вставить(ИгровойДень, ДатаМесяцаСезона);
				ИгровойДень = ИгровойДень + 1;
			КонецЕсли;
			ДатаМесяцаСезона = ДатаМесяцаСезона + 86400;
		КонецЦикла;
	КонецЦикла;	
	
	Для Каждого СтрокаТаблицы Из Расписание Цикл
		СтрокаТаблицы.Дата = ДатыИгровыхДней[СтрокаТаблицы.ИгровойДень];		
	КонецЦикла;
	
	Движения.РасписаниеЛиги.Загрузить(Расписание);
	Движения.РасписаниеЛиги.Записать();
	
КонецПроцедуры

Процедура ПеремешатьЭлементыМассива(ВсеКлубы)
		
	Для Счетчик = 0 По ВсеКлубы.Количество() - 1 Цикл
	
		Индекс = ИгровыеМеханики.СлучайноеЧисло(0, ВсеКлубы.Количество() - 1);      
		ФутбольныйКлуб = ВсеКлубы[Индекс]; 
		ВсеКлубы.Удалить(Индекс);  
		
		НовыйИндекс = ИгровыеМеханики.СлучайноеЧисло(0, ВсеКлубы.Количество() - 1);
		ВсеКлубы.Вставить(НовыйИндекс, ФутбольныйКлуб);
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти	

#КонецЕсли

